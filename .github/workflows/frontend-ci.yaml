# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: frontend CI

on:
  push:
    paths:
    - 'frontend/**'

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        # node-version: [12.x, 14.x, 16.x]
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    - run: npm ci
      working-directory: frontend
    - run: npm run build --if-present
      working-directory: frontend
    # - run: npm test # Omitting Tests as this service does not have any currently. 
  push_image:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - 
        uses: actions/checkout@v2
        name: Use Node.js ${{ matrix.node-version }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        uses: notiz-dev/github-action-json-property@release
        name: Get Package Version
        id: package_version
        with: 
          path: 'frontend/package.json'
          prop_path: 'version'
      -
        name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      -
        name: Build, tag, and push image to DockerHub
        env:
          REGISTRY: bilal690
          REPOSITORY: banking-frontend
          IMAGE_TAG: ${{steps.package_version.outputs.prop}}.${{ steps.extract_branch.outputs.branch }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f ./frontend/Dockerfile ./frontend
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      - name: Checkout Target Repository
        uses: actions/checkout@v2
        with:
          repository: Bilaltariq98/k8s-banking-testbed-argocd
          path: CD
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }} 
#       -
#         name: Setup tmate session
#         uses: mxschmitt/action-tmate@v3
      -
        name: Update Image Version in the related Kustomize rollout.yaml
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'testbed/frontend/${{ steps.extract_branch.outputs.branch }}/rollout.yaml'
          propertyPath: 'spec.template.spec.containers.0.image'
          value: 'bilal690/banking-frontend:${{steps.package_version.outputs.prop}}.${{ steps.extract_branch.outputs.branch }}'
          repository: Bilaltariq98/k8s-banking-testbed-argocd
          targetBranch: develop
          branch: develop
          masterBranchName: develop
          createPR: false
          message: 'Update Image in rollouts.yaml for frontend via CI'
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          workDir: CD
